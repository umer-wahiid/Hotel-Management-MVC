@model HManagement.Models.User

@{
    ViewBag.Title = "SignUp";
}
<style>
    .error {
        color: red;
    }
</style>
@Html.Raw(TempData["error"])

<section class="services-section spad">
    <div class="container">
        <h2 style="margin-left:450px;">SignUp</h2>

        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" style="margin-left:250px;">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UEmail, new { htmlAttributes = new { @class = "form-control", id = "email-input" } })
                        @*@Html.EditorFor(model => model.UEmail, new { htmlAttributes = new { @class = "form-control", pattern = "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$" } })*@
                        @Html.ValidationMessageFor(model => model.UEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div style="margin-left:400px;">
            <P>Already Have An Account ?  @Html.ActionLink("Login", "Login", "Users")</P>
        </div>
    </div>
</section>

<script>
    $(document).ready(function() {
        $('#myForm').validate({
            rules: {
                UEmail: {
                    required: true,
                    email: true,
                    customEmail: true
                }
            },
            messages: {
                UEmail: {
                    required: "Please enter your email",
                    email: "Please enter a valid email address",
                    customEmail: "Please enter a valid email address"
                }
            },
            submitHandler: function(form) {
                form.submit();
            }
        });

        $.validator.addMethod("customEmail", function(value, element) {
            return this.optional(element) || /\./.test(value);
        }, "Please enter a valid email address");
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
